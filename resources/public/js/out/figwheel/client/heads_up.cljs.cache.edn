;; Analyzed by ClojureScript 0.0-3196
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name figwheel.client.heads-up, :imports nil, :requires {async cljs.core.async, cljs.core.async cljs.core.async, socket figwheel.client.socket, figwheel.client.socket figwheel.client.socket, clojure.string clojure.string, string clojure.string}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, map< cljs.core.async, put! cljs.core.async}, :defs {get-content {:protocol-inline nil, :meta {:arglists (quote ([{:keys [content-area-el]}])), :end-column 18, :end-line 85, :column 7, :line 85, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/get-content, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([p__44209]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [content-area-el]}])), :test true}, file-and-line-number {:protocol-inline nil, :meta {:arglists (quote ([msg])), :end-column 27, :end-line 125, :column 7, :line 125, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/file-and-line-number, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, set-style! {:protocol-inline nil, :meta {:arglists (quote ([{:keys [container-el]} st-map])), :end-column 17, :end-line 76, :column 7, :line 76, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/set-style!, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 17, :method-params ([p__44199 st-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [container-el]} st-map])), :test true}, heading {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 14, :end-line 116, :column 7, :line 116, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/heading, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 14, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, clear {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 12, :end-line 158, :column 7, :line 158, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/clear, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, get-dataset {:protocol-inline nil, :meta {:arglists (quote ([el])), :end-column 18, :end-line 32, :column 7, :line 32, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/get-dataset, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el])), :test true}, display-heads-up {:protocol-inline nil, :meta {:arglists (quote ([style msg])), :end-column 23, :end-line 101, :column 7, :line 101, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-heads-up, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 23, :method-params ([style msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([style msg])), :test true}, display-error {:protocol-inline nil, :meta {:arglists (quote ([formatted-messages])), :end-column 20, :end-line 139, :column 7, :line 139, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-error, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 20, :method-params ([formatted-messages]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([formatted-messages])), :test true}, format-line {:protocol-inline nil, :meta {:arglists (quote ([msg])), :end-column 18, :end-line 134, :column 7, :line 134, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/format-line, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, heads-up-event-dispatch {:meta {:end-column 34, :end-line 19, :column 11, :line 19, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :line 19, :column 1, :end-line 19, :end-column 34, :test true, :name figwheel.client.heads-up/heads-up-event-dispatch}, heads-up-onclick-handler {:protocol-inline nil, :meta {:arglists (quote ([event])), :end-column 31, :end-line 36, :column 7, :line 36, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/heads-up-onclick-handler, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 31, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, append-message {:protocol-inline nil, :meta {:arglists (quote ([message])), :end-column 21, :end-line 152, :column 7, :line 152, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/append-message, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 21, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message])), :test true}, set-content! {:protocol-inline nil, :meta {:arglists (quote ([{:keys [content-area-el], :as c} dom-str])), :end-column 19, :end-line 82, :column 7, :line 82, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/set-content!, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 19, :method-params ([p__44206 dom-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [content-area-el], :as c} dom-str])), :test true}, display-warning {:protocol-inline nil, :meta {:arglists (quote ([msg])), :end-column 22, :end-line 149, :column 7, :line 149, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-warning, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 22, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, file-selector-div {:protocol-inline nil, :meta {:arglists (quote ([file-name line-number msg])), :end-column 24, :end-line 129, :column 7, :line 129, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/file-selector-div, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 24, :method-params ([file-name line-number msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 3, :fn-var true, :arglists (quote ([file-name line-number msg])), :test true}, display-loaded-start {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 27, :end-line 172, :column 7, :line 172, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-loaded-start, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ensure-container {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 23, :end-line 42, :column 7, :line 42, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/ensure-container, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, clojure-symbol-svg {:meta {:end-column 24, :end-line 186, :column 6, :line 186, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :line 186, :column 1, :end-line 186, :end-column 24, :test true, :name figwheel.client.heads-up/clojure-symbol-svg}, node {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params [(t attrs children)], :arglists [[t attrs & children]], :arglists-meta (nil)}, :arglists (quote ([t attrs & children])), :end-column 11, :end-line 13, :column 7, :line 13, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/node, :variadic true, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(t attrs children)], :arglists [[t attrs & children]], :arglists-meta (nil)}, :method-params [(t attrs children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists [[t attrs & children]], :test true}, display-system-warning {:protocol-inline nil, :meta {:arglists (quote ([header msg])), :end-column 29, :end-line 145, :column 7, :line 145, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-system-warning, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 29, :method-params ([header msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([header msg])), :test true}, close-link {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 88, :column 7, :line 88, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/close-link, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ancestor-nodes {:protocol-inline nil, :meta {:arglists (quote ([el])), :end-column 21, :end-line 29, :column 7, :line 29, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/ancestor-nodes, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 21, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el])), :test true}, flash-loaded {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 19, :end-line 180, :column 7, :line 180, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/flash-loaded, :variadic false, :file "resources/public/js/out/figwheel/client/heads_up.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:hierarchy :default :figwheel-event :file-name :file-line :div :id :style :container-el :content-area-el :height :paddingTop :paddingBottom :width :minHeight :opacity :recur :else :backgroundColor :padding :borderRadius :paddingLeft :paddingRight], :seen #{:figwheel-event :content-area-el :borderRadius :else :paddingBottom :paddingTop :default :paddingRight :width :recur :paddingLeft :container-el :style :div :opacity :id :padding :file-name :hierarchy :backgroundColor :minHeight :file-line :height}}, :doc nil}