;; Analyzed by ClojureScript 0.0-3196
{:use-macros nil, :excludes #{}, :name figwheel.client.utils, :imports nil, :requires nil, :uses nil, :defs {log {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [level arg]), :arglists ([x] [level arg]), :arglists-meta (nil nil)}, :arglists (quote ([x] [level arg])), :end-column 10, :end-line 26, :column 7, :line 26, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/utils.cljs"}, :name figwheel.client.utils/log, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [level arg]), :arglists ([x] [level arg]), :arglists-meta (nil nil)}, :method-params ([x] [level arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists ([x] [level arg]), :test true}, debug-prn {:protocol-inline nil, :meta {:arglists (quote ([o])), :end-column 16, :end-line 18, :column 7, :line 18, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/utils.cljs"}, :name figwheel.client.utils/debug-prn, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :test true}, host-env? {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 16, :end-line 12, :column 7, :line 12, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/utils.cljs"}, :name figwheel.client.utils/host-env?, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, node-env? {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 16, :end-line 10, :column 7, :line 10, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/utils.cljs"}, :name figwheel.client.utils/node-env?, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, html-env? {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 16, :end-line 8, :column 7, :line 8, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/utils.cljs"}, :name figwheel.client.utils/html-env?, :variadic false, :file "resources/public/js/out/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, *print-debug* {:meta {:dynamic true, :end-column 29, :end-line 6, :column 16, :line 6, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/figwheel/client/utils.cljs"}, :file "resources/public/js/out/figwheel/client/utils.cljs", :line 6, :column 1, :end-line 6, :end-column 29, :dynamic true, :test true, :name figwheel.client.utils/*print-debug*}}, :require-macros nil, :cljs.analyzer/constants {:order [:html :node :else :info :warn :debug :error], :seen #{:else :warn :debug :node :info :error :html}}, :doc nil}