;; Analyzed by ClojureScript 0.0-3196
{:use-macros {log reagent.debug, warn-unless reagent.debug, dbg reagent.debug, .' reagent.interop, prn reagent.debug, warn reagent.debug, dev? reagent.debug, println reagent.debug, .! reagent.interop}, :excludes #{}, :name reagent.impl.template, :imports nil, :requires {reagent.impl.util reagent.impl.util, comp reagent.impl.component, reagent.interop reagent.interop, reagent.ratom reagent.ratom, reagent.impl.batching reagent.impl.batching, reagent.impl.component reagent.impl.component, util reagent.impl.util, ratom reagent.ratom, string clojure.string, batch reagent.impl.batching, reagent.debug reagent.debug, clojure.string clojure.string}, :uses {is-client reagent.impl.util}, :defs {obj-get {:protocol-inline nil, :meta {:arglists (quote ([o k])), :end-column 14, :end-line 42, :column 7, :line 42, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/obj-get, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 14, :method-params ([o k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o k])), :test true}, valid-tag? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 17, :end-line 30, :column 7, :line 30, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/valid-tag?, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, adapt-react-class {:protocol-inline nil, :meta {:arglists (quote ([c])), :end-column 24, :end-line 196, :column 7, :line 196, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/adapt-react-class, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 24, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :test true}, get-key {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 14, :end-line 182, :column 7, :line 182, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/get-key, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, re-tag {:meta {:doc "Regular expression that parses a CSS-style id and class\n             from a tag name.", :end-column 9, :end-line 15, :column 3, :line 15, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 13, :column 1, :end-line 15, :end-column 9, :doc "Regular expression that parses a CSS-style id and class\n             from a tag name.", :test true, :name reagent.impl.template/re-tag}, reag-element {:protocol-inline nil, :meta {:arglists (quote ([tag v])), :end-column 19, :end-line 190, :column 7, :line 190, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/reag-element, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 19, :method-params ([tag v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tag v])), :test true}, as-element {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 17, :end-line 245, :column 7, :line 245, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/as-element, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, input-component? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 23, :end-line 125, :column 7, :line 125, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-component?, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 23, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, NativeWrapper {:num-fields 1, :protocols #{}, :name reagent.impl.template/NativeWrapper, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 23, :type true, :column 10, :line 17, :record false, :end-line 17, :skip-protocol-flag nil}, ->NativeWrapper {:protocol-inline nil, :meta {:arglists (quote ([comp])), :factory :positional, :skip-protocol-flag nil, :protocols #{}, :end-column 23, :end-line 17, :column 10, :line 17, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :protocols #{}, :name reagent.impl.template/->NativeWrapper, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 23, :method-params ([comp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comp])), :skip-protocol-flag nil, :test true}, input-render-setup {:protocol-inline nil, :meta {:arglists (quote ([this jsprops])), :end-column 25, :end-line 110, :column 7, :line 110, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-render-setup, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 25, :method-params ([this jsprops]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this jsprops])), :test true}, hiccup-tag? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 18, :end-line 26, :column 7, :line 26, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/hiccup-tag?, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, set-id-class {:protocol-inline nil, :meta {:arglists (quote ([props id class])), :end-column 19, :end-line 66, :column 7, :line 66, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/set-id-class, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 19, :method-params ([props id class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 3, :fn-var true, :arglists (quote ([props id class])), :test true}, as-class {:protocol-inline nil, :meta {:arglists (quote ([tag])), :end-column 15, :end-line 177, :column 7, :line 177, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/as-class, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 15, :method-params ([tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tag])), :test true}, tag-name-cache {:meta {:end-column 20, :end-line 201, :column 6, :line 201, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 201, :column 1, :end-line 201, :end-column 20, :test true, :name reagent.impl.template/tag-name-cache}, fn-to-class {:protocol-inline nil, :meta {:arglists (quote ([f])), :end-column 18, :end-line 162, :column 7, :line 162, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/fn-to-class, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 18, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, prop-name-cache {:meta {:end-column 21, :end-line 38, :column 6, :line 38, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 38, :column 1, :end-line 38, :end-column 21, :test true, :name reagent.impl.template/prop-name-cache}, convert-props {:protocol-inline nil, :meta {:arglists (quote ([props id-class])), :end-column 20, :end-line 77, :column 7, :line 77, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/convert-props, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 20, :method-params ([props id-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props id-class])), :test true}, named? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 13, :end-line 22, :column 7, :line 22, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/named?, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, parse-tag {:protocol-inline nil, :meta {:arglists (quote ([hiccup-tag])), :end-column 16, :end-line 152, :column 7, :line 152, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/parse-tag, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 16, :method-params ([hiccup-tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hiccup-tag])), :test true}, key-from-vec {:protocol-inline nil, :meta {:arglists (quote ([v])), :end-column 19, :end-line 185, :column 7, :line 185, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/key-from-vec, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 19, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, input-unmount {:protocol-inline nil, :meta {:arglists (quote ([this])), :end-column 20, :end-line 91, :column 7, :line 91, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-unmount, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, reagent-input-class {:meta {:end-column 25, :end-line 129, :column 6, :line 129, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 129, :column 1, :end-line 129, :end-column 25, :test true, :name reagent.impl.template/reagent-input-class}, native-element {:protocol-inline nil, :meta {:arglists (quote ([tag argv])), :end-column 21, :end-line 213, :column 7, :line 213, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/native-element, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 21, :method-params ([tag argv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tag argv])), :test true}, reagent-input {:protocol-inline nil, :meta {:arglists (quote ([argv comp jsprops first-child])), :end-column 20, :end-line 143, :column 7, :line 143, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/reagent-input, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 20, :method-params ([argv comp jsprops first-child]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 4, :fn-var true, :arglists (quote ([argv comp jsprops first-child])), :test true}, vec-to-elem {:protocol-inline nil, :meta {:arglists (quote ([v])), :end-column 18, :end-line 230, :column 7, :line 230, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/vec-to-elem, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, input-handle-change {:protocol-inline nil, :meta {:arglists (quote ([this on-change e])), :end-column 26, :end-line 101, :column 7, :line 101, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-handle-change, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 26, :method-params ([this on-change e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this on-change e])), :test true}, input-set-value {:protocol-inline nil, :meta {:arglists (quote ([this])), :end-column 22, :end-line 94, :column 7, :line 94, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/input-set-value, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, make-element {:protocol-inline nil, :meta {:arglists (quote ([argv comp jsprops first-child])), :end-column 19, :end-line 284, :column 7, :line 284, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/make-element, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 19, :method-params ([argv comp jsprops first-child]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 4, :fn-var true, :arglists (quote ([argv comp jsprops first-child])), :test true}, input-spec {:meta {:end-column 16, :end-line 133, :column 6, :line 133, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :file "resources/public/js/out/reagent/impl/template.cljs", :line 133, :column 1, :end-line 133, :end-column 16, :test true, :name reagent.impl.template/input-spec}, expand-seq-dev {:protocol-inline nil, :meta {:arglists (quote ([s o])), :end-column 21, :end-line 259, :column 7, :line 259, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/expand-seq-dev, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 21, :method-params ([s o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s o])), :test true}, convert-prop-value {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 25, :end-line 54, :column 7, :line 54, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/convert-prop-value, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 25, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, cached-prop-name {:protocol-inline nil, :meta {:arglists (quote ([k])), :end-column 23, :end-line 46, :column 7, :line 46, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/cached-prop-name, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 23, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k])), :test true}, expand-seq {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 17, :end-line 253, :column 7, :line 253, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/expand-seq, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, expand-seq-check {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 23, :end-line 269, :column 7, :line 269, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/expand-seq-check, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 23, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 269, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, cached-parse {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 19, :end-line 203, :column 7, :line 203, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/impl/template.cljs"}, :name reagent.impl.template/cached-parse, :variadic false, :file "resources/public/js/out/reagent/impl/template.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}}, :require-macros {reagent.debug reagent.debug, reagent.interop reagent.interop}, :cljs.analyzer/constants {:order [:display-name :component-did-update :component-will-unmount :reagent-render :key], :seen #{:key :component-did-update :reagent-render :component-will-unmount :display-name}}, :doc nil}