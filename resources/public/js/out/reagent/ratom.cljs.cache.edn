;; Analyzed by ClojureScript 0.0-3196
{:use-macros {log reagent.debug, dbg reagent.debug, warn reagent.debug, dev? reagent.debug}, :excludes #{atom}, :name reagent.ratom, :imports nil, :requires {reagent.impl.util reagent.impl.util, util reagent.impl.util}, :uses nil, :defs {->RCursor {:protocol-inline nil, :meta {:arglists (quote ([ratom path reaction])), :factory :positional, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :end-column 17, :end-line 104, :column 10, :line 104, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/->RCursor, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 17, :method-params ([ratom path reaction]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 104, :end-line 104, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ratom path reaction])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, notify-deref-watcher! {:protocol-inline nil, :meta {:arglists (quote ([derefable])), :private true, :end-column 29, :end-line 25, :column 8, :line 25, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :private true, :name reagent.ratom/notify-deref-watcher!, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 29, :method-params ([derefable]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([derefable])), :test true}, IComputedImpl {:meta {:protocol-info {:methods {-update-watching [[this derefed]], -handle-change [[k sender oldval newval]], -peek-at [[this]]}}, :protocol-symbol true, :doc nil, :end-column 27, :end-line 195, :column 14, :line 195, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocol-symbol true, :name reagent.ratom/IComputedImpl, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 27, :column 1, :line 195, :protocol-info {:methods {-update-watching [[this derefed]], -handle-change [[k sender oldval newval]], -peek-at [[this]]}}, :info nil, :end-line 195, :impls #{reagent.ratom/Reaction}, :doc nil, :test true}, capture-derefed {:protocol-inline nil, :meta {:arglists (quote ([f obj])), :end-column 22, :end-line 15, :column 7, :line 15, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :name reagent.ratom/capture-derefed, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 22, :method-params ([f obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f obj])), :test true}, RAtom {:num-fields 4, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/RAtom, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 15, :type true, :column 10, :line 38, :record false, :end-line 38, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}}, atom {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params ([x]), :arglists ([x] [x & {:keys [meta validator]}]), :arglists-meta (nil nil)}, :arglists (quote ([x] [x & {:keys [meta validator]}])), :doc "Like clojure.core/atom, except that it keeps track of derefs.", :end-column 11, :end-line 93, :column 7, :line 93, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :name reagent.ratom/atom, :variadic true, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([x]), :arglists ([x] [x & {:keys [meta validator]}]), :arglists-meta (nil nil)}, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists ([x] [x & {:keys [meta validator]}]), :doc "Like clojure.core/atom, except that it keeps track of derefs.", :test true}, ->Reaction {:protocol-inline nil, :meta {:arglists (quote ([f state dirty? active? watching watches auto-run on-set on-dispose])), :factory :positional, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :end-column 18, :end-line 200, :column 10, :line 200, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->Reaction, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 18, :method-params ([f state dirty? active? watching watches auto-run on-set on-dispose]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 200, :end-line 200, :max-fixed-arity 9, :fn-var true, :arglists (quote ([f state dirty? active? watching watches auto-run on-set on-dispose])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, make-wrapper {:protocol-inline nil, :meta {:arglists (quote ([value callback-fn args])), :end-column 19, :end-line 395, :column 7, :line 395, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :name reagent.ratom/make-wrapper, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 19, :method-params ([value callback-fn args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 395, :end-line 395, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value callback-fn args])), :test true}, IReactiveAtom {:meta {:protocol-info {:methods {}}, :protocol-symbol true, :doc nil, :end-column 27, :end-line 36, :column 14, :line 36, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocol-symbol true, :name reagent.ratom/IReactiveAtom, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 27, :column 1, :line 36, :protocol-info {:methods {}}, :info nil, :end-line 36, :impls #{reagent.ratom/RCursor reagent.ratom/Reaction reagent.ratom/RAtom}, :doc nil, :test true}, dispose! {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol reagent.ratom/IDisposable, :end-column 12, :end-line 190, :column 4, :line 190, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocol reagent.ratom/IDisposable, :name reagent.ratom/dispose!, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, -update-watching {:protocol-inline nil, :meta {:arglists (quote ([this derefed])), :doc nil, :protocol reagent.ratom/IComputedImpl, :end-column 20, :end-line 196, :column 4, :line 196, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-update-watching, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 20, :method-params ([this derefed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 196, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this derefed])), :doc nil, :test true}, run {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol reagent.ratom/IRunnable, :end-column 7, :end-line 193, :column 4, :line 193, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocol reagent.ratom/IRunnable, :name reagent.ratom/run, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 7, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, IDisposable {:meta {:protocol-info {:methods {dispose! [[this]]}}, :protocol-symbol true, :doc nil, :end-column 25, :end-line 189, :column 14, :line 189, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocol-symbol true, :name reagent.ratom/IDisposable, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 25, :column 1, :line 189, :protocol-info {:methods {dispose! [[this]]}}, :info nil, :end-line 189, :impls #{reagent.ratom/Reaction}, :doc nil, :test true}, captured {:protocol-inline nil, :meta {:arglists (quote ([obj])), :end-column 15, :end-line 20, :column 7, :line 20, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :name reagent.ratom/captured, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 15, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :test true}, make-reaction {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f {:keys [auto-run on-set on-dispose derefed]})], :arglists [[f & {:keys [auto-run on-set on-dispose derefed]}]], :arglists-meta (nil)}, :arglists (quote ([f & {:keys [auto-run on-set on-dispose derefed]}])), :end-column 20, :end-line 319, :column 7, :line 319, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :name reagent.ratom/make-reaction, :variadic true, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f {:keys [auto-run on-set on-dispose derefed]})], :arglists [[f & {:keys [auto-run on-set on-dispose derefed]}]], :arglists-meta (nil)}, :method-params [(f {:keys [auto-run on-set on-dispose derefed]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 319, :end-line 319, :max-fixed-arity 1, :fn-var true, :arglists [[f & {:keys [auto-run on-set on-dispose derefed]}]], :test true}, Reaction {:num-fields 9, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/Reaction, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 18, :type true, :column 10, :line 200, :record false, :end-line 200, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, RCursor {:num-fields 3, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/RCursor, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 17, :type true, :column 10, :line 104, :record false, :end-line 104, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, -handle-change {:protocol-inline nil, :meta {:arglists (quote ([k sender oldval newval])), :doc nil, :protocol reagent.ratom/IComputedImpl, :end-column 18, :end-line 197, :column 4, :line 197, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-handle-change, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 18, :method-params ([k sender oldval newval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 197, :max-fixed-arity 4, :fn-var true, :arglists (quote ([k sender oldval newval])), :doc nil, :test true}, debug {:meta {:end-column 15, :end-line 9, :column 10, :line 9, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :file "resources/public/js/out/reagent/ratom.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :test true, :name reagent.ratom/debug}, -running {:meta {:end-column 18, :end-line 11, :column 10, :line 11, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :file "resources/public/js/out/reagent/ratom.cljs", :line 11, :column 1, :end-line 11, :end-column 18, :test true, :name reagent.ratom/-running}, cursor {:protocol-inline nil, :meta {:arglists (quote ([src path])), :end-column 13, :end-line 166, :column 7, :line 166, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :name reagent.ratom/cursor, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 13, :method-params ([src path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 2, :fn-var true, :arglists (quote ([src path])), :test true}, Wrapper {:num-fields 4, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/Wrapper, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 17, :type true, :column 10, :line 335, :record false, :end-line 335, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, running {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 14, :end-line 13, :column 7, :line 13, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :name reagent.ratom/running, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, IRunnable {:meta {:protocol-info {:methods {run [[this]]}}, :protocol-symbol true, :doc nil, :end-column 23, :end-line 192, :column 14, :line 192, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocol-symbol true, :name reagent.ratom/IRunnable, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 23, :column 1, :line 192, :protocol-info {:methods {run [[this]]}}, :info nil, :end-line 192, :impls #{reagent.ratom/Reaction}, :doc nil, :test true}, -peek-at {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol reagent.ratom/IComputedImpl, :end-column 12, :end-line 198, :column 4, :line 198, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-peek-at, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, *ratom-context* {:meta {:declared true, :dynamic true, :end-column 35, :end-line 7, :column 20, :line 7, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :name reagent.ratom/*ratom-context*, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 35, :column 1, :dynamic true, :line 7, :declared true, :end-line 7, :test true}, ->Wrapper {:protocol-inline nil, :meta {:arglists (quote ([state callback changed watches])), :factory :positional, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :end-column 17, :end-line 335, :column 10, :line 335, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->Wrapper, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 17, :method-params ([state callback changed watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 335, :end-line 335, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state callback changed watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, ->RAtom {:protocol-inline nil, :meta {:arglists (quote ([state meta validator watches])), :factory :positional, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :end-column 15, :end-line 38, :column 10, :line 38, :file "/Users/joelkuiper/Repositories/knowledge/resources/public/js/out/reagent/ratom.cljs"}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->RAtom, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 15, :method-params ([state meta validator watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 38, :end-line 38, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state meta validator watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}}, :require-macros {reagent.debug reagent.debug}, :cljs.analyzer/constants {:order [:validator :meta :on-set :derefed :on-dispose :auto-run], :seen #{:on-set :meta :derefed :validator :auto-run :on-dispose}}, :doc nil}