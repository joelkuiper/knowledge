;; Analyzed by ClojureScript 0.0-3196
{:use-macros nil, :excludes #{}, :name knowledge.core, :imports nil, :requires {uuid cljs-uuid-utils.core, goog.dom goog.dom, reagent reagent.core, ajax.core ajax.core, secretary secretary.core, dom goog.dom, reagent.session reagent.session, session reagent.session, cljs-uuid-utils.core cljs-uuid-utils.core, reagent.core reagent.core, popup knowledge.popup, reagent-forms.core reagent-forms.core, knowledge.plates knowledge.plates, events goog.events, plates knowledge.plates, secretary.core secretary.core, goog.events goog.events, knowledge.popup knowledge.popup}, :uses {POST ajax.core, atom reagent.core, bind-fields reagent-forms.core, GET ajax.core}, :defs {default-type {:meta {:end-column 18, :end-line 17, :column 6, :line 17, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :file "src-cljs/knowledge/core.cljs", :line 17, :column 1, :end-line 17, :end-column 18, :test true, :name knowledge.core/default-type}, plate {:protocol-inline nil, :meta {:arglists (quote ([path state])), :end-column 12, :end-line 105, :column 7, :line 105, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/plate, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 12, :method-params ([path state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path state])), :test true}, init! {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 12, :end-line 137, :column 7, :line 137, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/init!, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, popup-visible? {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 21, :end-line 27, :column 7, :line 27, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/popup-visible?, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, socket {:protocol-inline nil, :meta {:arglists (quote ([path])), :end-column 13, :end-line 37, :column 7, :line 37, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/socket, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 13, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :test true}, plate-header {:protocol-inline nil, :meta {:arglists (quote ([title path collapsed?])), :end-column 19, :end-line 80, :column 7, :line 80, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/plate-header, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 19, :method-params ([title path collapsed?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 3, :fn-var true, :arglists (quote ([title path collapsed?])), :test true}, child-plates {:protocol-inline nil, :meta {:arglists (quote ([path])), :end-column 19, :end-line 58, :column 7, :line 58, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/child-plates, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 19, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :test true}, mount-components {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 23, :end-line 127, :column 7, :line 127, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/mount-components, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, listen-for-window-click {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 30, :end-line 130, :column 7, :line 130, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/listen-for-window-click, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, active-socket? {:protocol-inline nil, :meta {:arglists (quote ([path])), :end-column 21, :end-line 30, :column 7, :line 30, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/active-socket?, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 21, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :test true}, app-state {:meta {:end-column 15, :end-line 25, :column 6, :line 25, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :file "src-cljs/knowledge/core.cljs", :line 25, :column 1, :end-line 25, :end-column 15, :test true, :name knowledge.core/app-state}, depth->class {:protocol-inline nil, :meta {:arglists (quote ([depth])), :end-column 19, :end-line 52, :column 7, :line 52, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/depth->class, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 19, :method-params ([depth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([depth])), :test true}, title-edit {:meta {:end-column 16, :end-line 63, :column 6, :line 63, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :file "src-cljs/knowledge/core.cljs", :line 63, :column 1, :end-line 63, :end-column 16, :test true, :name knowledge.core/title-edit}, app {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 10, :end-line 119, :column 7, :line 119, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/app, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, default-state {:meta {:end-column 19, :end-line 19, :column 6, :line 19, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :file "src-cljs/knowledge/core.cljs", :line 19, :column 1, :end-line 19, :end-column 19, :test true, :name knowledge.core/default-state}}, :require-macros {secretary.core secretary.core, secretary secretary.core}, :cljs.analyzer/constants {:order [:text :socket-popup :plates :visible :path :on-click :top :left :offset :key :input.title-edit :type :value :on-key-down :on-blur :on-change :component-did-mount :title :h6 :span :div :style :float :i.mdi-navigation-close.delete :i.mdi-navigation-expand-more :i.mdi-navigation-expand-less :div.row :div.col.s12 :prefix :page :home], :seen #{:path :i.mdi-navigation-expand-less :home :key :offset :top :i.mdi-navigation-close.delete :float :value :component-did-mount :i.mdi-navigation-expand-more :on-blur :type :socket-popup :page :input.title-edit :plates :on-click :title :prefix :style :div :div.row :h6 :div.col.s12 :on-change :visible :on-key-down :left :text :span}}, :doc nil}