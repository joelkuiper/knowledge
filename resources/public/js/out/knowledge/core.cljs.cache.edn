;; Analyzed by ClojureScript 0.0-3196
{:use-macros nil, :excludes #{}, :name knowledge.core, :imports nil, :requires {uuid cljs-uuid-utils.core, reagent reagent.core, ajax.core ajax.core, secretary secretary.core, clojure.zip clojure.zip, reagent.session reagent.session, session reagent.session, cljs-uuid-utils.core cljs-uuid-utils.core, reagent.core reagent.core, reagent-forms.core reagent-forms.core, secretary.core secretary.core, z clojure.zip}, :uses {POST ajax.core, atom reagent.core, bind-fields reagent-forms.core, GET ajax.core}, :defs {fill-socket {:protocol-inline nil, :meta {:arglists (quote ([path type])), :end-column 18, :end-line 24, :column 7, :line 24, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/fill-socket, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 18, :method-params ([path type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path type])), :test true}, plate {:protocol-inline nil, :meta {:arglists (quote ([path state])), :end-column 12, :end-line 49, :column 7, :line 49, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/plate, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 12, :method-params ([path state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path state])), :test true}, init! {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 12, :end-line 69, :column 7, :line 69, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/init!, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, child-plates {:protocol-inline nil, :meta {:arglists (quote ([path])), :end-column 19, :end-line 43, :column 7, :line 43, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/child-plates, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 19, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :test true}, socket-button {:protocol-inline nil, :meta {:arglists (quote ([path])), :end-column 20, :end-line 30, :column 7, :line 30, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/socket-button, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 20, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :test true}, mount-components {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 23, :end-line 66, :column 7, :line 66, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/mount-components, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, new-plate {:protocol-inline nil, :meta {:arglists (quote ([type])), :end-column 16, :end-line 16, :column 7, :line 16, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/new-plate, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 16, :method-params ([type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type])), :test true}, app-state {:meta {:end-column 15, :end-line 14, :column 6, :line 14, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :file "src-cljs/knowledge/core.cljs", :line 14, :column 1, :end-line 14, :end-column 15, :test true, :name knowledge.core/app-state}, depth->class {:protocol-inline nil, :meta {:arglists (quote ([depth])), :end-column 19, :end-line 37, :column 7, :line 37, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/depth->class, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 19, :method-params ([depth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([depth])), :test true}, app {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 10, :end-line 59, :column 7, :line 59, :file "/Users/joelkuiper/Repositories/knowledge/src-cljs/knowledge/core.cljs"}, :name knowledge.core/app, :variadic false, :file "src-cljs/knowledge/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {secretary.core secretary.core, secretary secretary.core}, :cljs.analyzer/constants {:order [:plates :type :title :accepts :provides :a.btn-flat.waves-effect.waves-teal :style :on-click :color :i.mdi-content-add :key :div.row :div.col.s12 :div.card-content :h6 :div.card-action.right-align :h4 :prefix :page :home], :seen #{:home :color :div.card-content :key :type :page :plates :on-click :title :prefix :style :h4 :div.row :h6 :a.btn-flat.waves-effect.waves-teal :accepts :provides :div.col.s12 :i.mdi-content-add :div.card-action.right-align}}, :doc nil}